# ======================================
# Media Server Docker Configuration
# ======================================
# Copy this file to .env and configure according to your needs

# =============================================================================
# BASIC CONFIGURATION
# =============================================================================

# User and Group IDs (get with: id $USER)
PUID=1000
PGID=1000

# Timezone (find yours at: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)
TZ=America/New_York

# Network configuration (adjust to your network)
LAN_NETWORK=192.168.1.0/24

# Published URL for Jellyfin (change IP to your server's IP)
JELLYFIN_PUBLISHED_URL=http://192.168.1.100:8096

# =============================================================================
# DEPLOYMENT PROFILES
# =============================================================================
# Uncomment the deployment scenario that matches your needs

# Basic deployment (no VPN, direct connection)
COMPOSE_PROFILES=basic

# With VPN for torrents (VPN-enabled qBittorrent)
# COMPOSE_PROFILES=basic,vpn

# Development/testing (includes debug tools)
# COMPOSE_PROFILES=basic,dev

# Full deployment with optional services
# COMPOSE_PROFILES=basic,vpn,optional

# =============================================================================
# STORAGE PATHS
# =============================================================================
# Absolute paths on your host system - CHANGE THESE TO YOUR ACTUAL PATHS

# Base data directory (will create subdirectories)
DATA_ROOT=/data

# Alternative: Use separate paths for each type
# CONFIG_ROOT=${DATA_ROOT}/config
# MEDIA_ROOT=${DATA_ROOT}/media
# DOWNLOAD_ROOT=${DATA_ROOT}/torrents

# =============================================================================
# PORT CONFIGURATION
# =============================================================================
# Change these if you have port conflicts

# Media Server
JELLYFIN_HTTP_PORT=8096
JELLYFIN_HTTPS_PORT=8920

# Automation Tools
SONARR_PORT=8989
RADARR_PORT=7878
LIDARR_PORT=8686
PROWLARR_PORT=9696

# Download Client
QBITTORRENT_PORT=8080
QBITTORRENT_TORRENT_PORT=6881

# Optional Services
JACKETT_PORT=9117
FLARESOLVERR_PORT=8191

# =============================================================================
# VPN CONFIGURATION (only needed if using VPN profile)
# =============================================================================

# VPN Provider (generic, proton, pia)
VPN_PROVIDER=generic

# Enable VPN for qBittorrent (true/false)
VPN_ENABLED=false

# WireGuard config name (without .conf extension)
VPN_CONF=wg0

# Auto port forwarding for torrents (true/false/port_number)
VPN_AUTO_PORT_FORWARD=false

# Firewall type (auto, legacy, nftables)
VPN_FIREWALL_TYPE=auto

# VPN Health check (true/false)
VPN_HEALTHCHECK_ENABLED=true

# DNS servers for VPN (leave empty for default)
VPN_NAMESERVERS=1.1.1.1,8.8.8.8

# =============================================================================
# HARDWARE ACCELERATION
# =============================================================================

# Intel Quick Sync Video (true/false)
JELLYFIN_INTEL_GPU=true

# NVIDIA GPU support (true/false) - requires nvidia-container-toolkit
JELLYFIN_NVIDIA_GPU=false

# AMD GPU support (true/false) - not recommended
JELLYFIN_AMD_GPU=false

# =============================================================================
# OPTIONAL SERVICE CONFIGURATION
# =============================================================================

# Enable FlareSolverr for CloudFlare-protected trackers (true/false)
FLARESOLVERR_ENABLED=true

# Enable Jackett as alternative to Prowlarr (true/false)
JACKETT_ENABLED=false

# Enable Watchtower for automatic updates (true/false)
WATCHTOWER_ENABLED=false

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Container restart policy (unless-stopped, always, no)
RESTART_POLICY=unless-stopped

# Docker network name
NETWORK_NAME=media-network

# Log driver (json-file, syslog, none)
LOG_DRIVER=json-file

# Log rotation (size and max files)
LOG_MAX_SIZE=10m
LOG_MAX_FILE=3

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# Run containers with read-only filesystem where possible (true/false)
READ_ONLY_ROOT=false

# Drop unnecessary capabilities (true/false)
DROP_CAPABILITIES=true

# Use non-privileged user inside containers (true/false)
RUN_AS_USER=true